{"version":3,"sources":["weatherData.js","WeatherIcons.jsx","App.js","reportWebVitals.js","index.js"],"names":["weatherdata","img","conditions","time","WeatherIcons","props","className","src","alt","App","map","weather","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMA4BeA,G,MA5BK,CAChB,CACIC,IAAI,qEACJC,WAAW,QACXC,KAAK,OAET,CACIF,IAAI,uEACJC,WAAW,QACXC,KAAK,OAET,CACIF,IAAI,wEACJC,WAAW,QACXC,KAAK,OAET,CACIF,IAAI,mFACJC,WAAW,eACXC,KAAK,SAET,CACIF,IAAI,8EACJC,WAAW,QACXC,KAAK,S,OCNEC,MAhBf,SAAsBC,GAClB,OACI,8BACI,sBAAKC,UAAU,UAAf,UACI,qBACAC,IAAKF,EAAMJ,IACXO,IAAKH,EAAMF,OAEX,8BAAG,+CAAyBE,EAAMH,cAClC,8BAAG,yCAAmBG,EAAMF,cCmB7BM,MAdf,WACE,OACE,gCACE,qDACE,kCAECT,EAAYU,KAAI,SAACC,GAChB,OAAO,cAAC,EAAD,eAAoCA,GAAjBA,EAAQV,cCX7BW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.49f3ad5f.chunk.js","sourcesContent":["const weatherdata = [\n    {\n        img:\"http://res.cloudinary.com/jkeohan/image/upload/v1535732381/day.svg\",\n        conditions:\"sunny\",\n        time:\"day\"\n    },\n    {\n        img:\"http://res.cloudinary.com/jkeohan/image/upload/v1535732381/night.svg\",\n        conditions:\"clear\",\n        time:\"day\"\n    },\n    {\n        img:\"http://res.cloudinary.com/jkeohan/image/upload/v1535732381/stormy.svg\",\n        conditions:\"clear\",\n        time:\"day\"\n    },\n    {\n        img:\"http://res.cloudinary.com/jkeohan/image/upload/v1535732381/cloudy-day_t7ckxp.svg\",\n        conditions:\"partly sunny\",\n        time:\"night\"\n    },\n    {\n        img:\"http://res.cloudinary.com/jkeohan/image/upload/v1535732381/cloudy-night.svg\",\n        conditions:\"clear\",\n        time:\"day\"\n    },\n];\n\nexport default weatherdata;","import React from 'react';\n\nfunction WeatherIcons(props) {\n    return (\n        <div>\n            <div className=\"weather\">\n                <img\n                src={props.img}\n                alt={props.time}\n                />\n                <p><span>conditions:</span>{props.conditions}</p>\n                <p><span>time:</span>{props.time}</p>\n            </div>\n\n        </div>\n    );\n}\n\nexport default WeatherIcons;","// import logo from './logo.svg';\nimport './App.css';\nimport weatherdata from './weatherData';\nimport WeatherIcons from './WeatherIcons';\n\n// function LoopData(weatherdata){\n//   return (\n//     <WeatherIcons\n//     key={weatherdata.img}\n//     img={weatherdata.img}\n//     conditions={weatherdata.conditions}\n//     time={weatherdata.time}\n//     />\n//   );\n// }\n\nfunction App() {\n  return (\n    <div>\n      <h1>My WeatherIcons App</h1> \n        <section>\n          {/* {weatherdata.map(LoopData)} */}\n        {weatherdata.map((weather) => {\n          return <WeatherIcons key={weather.img} {...weather}></WeatherIcons>\n        })}\n        </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}